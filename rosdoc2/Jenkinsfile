pipeline {
    agent any
    stages {
        stage('Docker build rosdoc2') {
            steps {
                sh 'docker build -t rosdoc2:docker_farm /var/docker_farm/rosdoc2'
            }
        }
        stage('Clone distroclone') {
            steps {
                checkout poll: false, scm: scmGit(branches: [[name: 'refs/heads/main']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'distroclone']], userRemoteConfigs: [[name: 'origin', url: 'https://github.com/rkent/distroclone']])
            }
        }
        /**/
        stage('Docker clone distro with distroclone') {
            steps {
                sh 'docker rm -f rosdoc2_scan || true'
                sh 'docker run --rm --name rosdoc2_scan -v $WORKSPACE:/rosdoc2 rosdoc2:docker_farm run_distroclone'
            }
        }
        stage('Clone rosdoc2') {
            steps {
                checkout poll: false, scm: scmGit(branches: [[name: 'refs/heads/rkj-main']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'rosdoc2']], userRemoteConfigs: [[url: 'https://github.com/rkent/rosdoc2.git']])
            }
        }
        stage('Docker run rosdoc2') {
            steps {
                sh 'docker rm -f rosdoc2_scan || true'
                sh 'docker run --rm --name rosdoc2_scan -v $WORKSPACE:/rosdoc2 rosdoc2:docker_farm run_rosdoc2'
            }
        }
        stage('Sync website') {
            steps {
                sh 'rsync -ra /ros2/jenkins/workspace/rosdoc2/docs_output /ros2/rosdoc2/'
            }
        }
    }
    post {
        always {
            sh 'docker stop rosdoc2_scan || true'
        }
    }
}
