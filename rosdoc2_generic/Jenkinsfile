pipeline {
    agent { label 'ubuntu' }

    /*
    environment{
        ROS_DISTRO = 'rolling'
        ROSDOC2_BRANCH = 'rkj-main'
        MAX_PACKAGES = '0'
        DOCS_EX = 'common/rosdoc2/empty.yaml'
        TIMEOUT = '3600'
        DESTINATION = '/srv/rosdoc2/'
        REPOS = '/srv/repos'
    }
    */

    stages {
        stage('Build info') {
            steps {
                sh 'env'
            }
        }
        stage('Docker build rosdoc2') {
            steps {
                sh 'docker build -t rosdoc2:$JOB_NAME common/rosdoc2'
            }
        }
        stage('Clone rosdoc2') {
            steps {
                checkout poll: false, scm: scmGit(branches: [[name: "refs/heads/${ROSDOC2_BRANCH}"]], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'rosdoc2']], userRemoteConfigs: [[url: 'https://github.com/rkent/rosdoc2.git']])
            }
        }
        stage('Docker run rosdoc2') {
            steps {
                sh 'docker rm -f $JOB_NAME 2>/dev/null || true'
                sh 'rm -rf docs_build'
                sh 'docker run --rm --name $JOB_NAME -v $WORKSPACE:/workspace -v /srv:/srv rosdoc2:$JOB_NAME run_rosdoc2 \
                     "scan -p $REPOS/$ROS_DISTRO -t $TIMEOUT -m $MAX_PACKAGES -o $DESTINATION/$ROS_DISTRO -y $DOCS_EX -u $BASE_URL/${ROS_DISTRO}"'
            }
        }
    }
    post {
        always {
            sh 'docker stop $JOB_NAME 2>/dev/null || true'
        }
    }
}
