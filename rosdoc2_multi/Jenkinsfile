pipeline {

    parameters {
        string(name: 'ROS_DISTRO', defaultValue: 'rolling', description: 'ROS distribution name')
        string(name: 'DESTINATION', defaultValue: 'dev', description: 'Type of build')
        string(name: 'DOCS_EX', defaultValue: 'common/rosdoc2/docs_ex.yaml', description: 'File with modified rosdoc2.yaml')
        string(name: 'REPOS', defaultValue: '/srv/repos', description: 'Path to repositories')
        string(name: 'MAX_PACKAGES', defaultValue: '10000', description: 'Max number of packages to process')
        string(name: 'TIMEOUT', defaultValue: '3600', description: 'Max seconds to allow per package')
        string(name: 'ROSDOC2_BRANCH', defaultValue: 'rkj-main', description: 'git rosdoc2 branch')
        string(name: 'AGENT', defaultValue: 'ubuntu', description: 'Agent label')
        string(name: 'REPO_URL', defaultValue: 'https://github.com/rkent/rosdoc2.git', description: 'Repo source URL')
        string(name: 'SUBPROCESSES', defaultValue: '8', description: 'Subprocess count')
    }

    agent { label "${params.AGENT}" }
    environment {
        TAG = "rosdoc2:${env.JOB_NAME}_${env.DESTINATION}_${env.ROS_DISTRO}"
        BASE_URL = "https://${env.DESTINATION}-rosdoc2.rosdabbler.com"
        CREFS = "/srv/${env.DESTINATION}-crefs"
    }

    stages {
        stage('Build info') {
            steps {
                sh 'env'
            }
        }
        stage('Docker build rosdoc2') {
            steps {
                sh 'docker build -t $TAG common/rosdoc2'
            }
        }
        stage('Clone rosdoc2') {
            steps {
                checkout poll: false, scm: scmGit(branches: [[name: "refs/heads/${ROSDOC2_BRANCH}"]], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'rosdoc2']], userRemoteConfigs: [[url: "${REPO_URL}"]])
            }
        }
        stage('Docker run rosdoc2') {
            steps {
                sh 'docker rm -f $TAG 2>/dev/null || true'
                sh 'rm -rf docs_build'
                sh 'docker run --rm --name $TAG_ -v $WORKSPACE:/workspace -v /srv:/srv $TAG run_rosdoc2 \
                     "scan -p $REPOS/$ROS_DISTRO -t $TIMEOUT -m $MAX_PACKAGES -o /srv/$DESTINATION-$ROS_DISTRO -y $DOCS_EX -u $BASE_URL -s $SUBPROCESSES -c $CREFS"'
            }
        }
    }
    post {
        always {
            sh 'docker stop $TAG 2>/dev/null || true'
        }
    }
}
