pipeline {
    agent any

    environment{
        ROS_DISTRO = 'humble'
        DESTINATION = 'checkout'
        ROSDOC2_BRANCH = 'rkj-main'
    }

    stages {
        /*
        stage('Docker build rosdoc2') {
            steps {
                sh 'docker build -t rosdoc2:docker_farm /var/docker_farm/rosdoc2'
            }
        }
        */
        stage('Clone distroclone') {
            steps {
                checkout poll: false, scm: scmGit(branches: [[name: 'refs/heads/main']], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'distroclone']], userRemoteConfigs: [[name: 'origin', url: 'https://github.com/rkent/distroclone']])
            }
        }
        /**/
        stage('Docker clone distro with distroclone') {
            steps {
                sh 'docker rm -f rosdoc2_scan_humble || true'
                sh 'echo ROS_DISTRO is ${ROS_DISTRO}'
                sh 'docker run --rm --name rosdoc2_scan_humble -v $WORKSPACE:/rosdoc2 rosdoc2:docker_farm run_distroclone ${ROS_DISTRO} ${DESTINATION}'
            }
        }
        stage('Clone rosdoc2') {
            steps {
                checkout poll: false, scm: scmGit(branches: [[name: "refs/heads/${ROSDOC2_BRANCH}"]], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'rosdoc2']], userRemoteConfigs: [[url: 'https://github.com/rkent/rosdoc2.git']])
            }
        }
        stage('Docker run rosdoc2') {
            steps {
                sh 'docker rm -f rosdoc2_scan_humble || true'
                sh 'docker run --rm --name rosdoc2_scan_humble -v $WORKSPACE:/rosdoc2 rosdoc2:docker_farm run_rosdoc2 "scan -p /rosdoc2/${DESTINATION} -t 3600 -y /rosdoc2/rosdoc2/docs_ex.yaml -u https://rosdoc2.rosdabbler.com/${ROS_DISTRO}"'
            }
        }
        /*
        stage('Sync website') {
            steps {
                sh 'rsync -ra /ros2/jenkins/workspace/rosdoc2/docs_output /ros2/rosdoc2/'
            }
        }
        */
    }
    post {
        always {
            sh 'docker stop rosdoc2_scan_humble || true'
        }
    }
}
